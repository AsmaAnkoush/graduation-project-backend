package com.bzu.smartvax.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AIAnalyzerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAIAnalyzerAllPropertiesEquals(AIAnalyzer expected, AIAnalyzer actual) {
        assertAIAnalyzerAutoGeneratedPropertiesEquals(expected, actual);
        assertAIAnalyzerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAIAnalyzerAllUpdatablePropertiesEquals(AIAnalyzer expected, AIAnalyzer actual) {
        assertAIAnalyzerUpdatableFieldsEquals(expected, actual);
        assertAIAnalyzerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAIAnalyzerAutoGeneratedPropertiesEquals(AIAnalyzer expected, AIAnalyzer actual) {
        assertThat(actual)
            .as("Verify AIAnalyzer auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAIAnalyzerUpdatableFieldsEquals(AIAnalyzer expected, AIAnalyzer actual) {
        assertThat(actual)
            .as("Verify AIAnalyzer relevant properties")
            .satisfies(a -> assertThat(a.getAnalysisResult()).as("check analysisResult").isEqualTo(expected.getAnalysisResult()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAIAnalyzerUpdatableRelationshipsEquals(AIAnalyzer expected, AIAnalyzer actual) {
        assertThat(actual)
            .as("Verify AIAnalyzer relationships")
            .satisfies(a -> assertThat(a.getFeedback()).as("check feedback").isEqualTo(expected.getFeedback()));
    }
}
